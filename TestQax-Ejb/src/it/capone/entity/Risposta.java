package it.capone.entity;
// Generated 22-ago-2017 16.20.01 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Risposta generated by hbm2java
 */
@Entity
@Table(name = "risposta", catalog = "qax")
@NamedQueries({
	@NamedQuery(name="Risposta.trovaRisposte",
				query="SELECT r FROM Risposta r WHERE r.domanda.iddomanda = :iddomanda")
})
public class Risposta implements java.io.Serializable {

	private Integer idrisposta;
	private Domanda domanda;
	private Utente utente;
	private String descrizione;
	private Date datacreazione;
	private Set<Commentorisposta> commentorispostas = new HashSet<Commentorisposta>(0);
	private Set<Domanda> domandas = new HashSet<Domanda>(0);

	public Risposta() {
	}

	public Risposta(Domanda domanda, String descrizione, Date datacreazione) {
		this.domanda = domanda;
		this.descrizione = descrizione;
		this.datacreazione = datacreazione;
	}

	public Risposta(Domanda domanda, Utente utente, String descrizione, Date datacreazione,
			Set<Commentorisposta> commentorispostas, Set<Domanda> domandas) {
		this.domanda = domanda;
		this.utente = utente;
		this.descrizione = descrizione;
		this.datacreazione = datacreazione;
		this.commentorispostas = commentorispostas;
		this.domandas = domandas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idrisposta", unique = true, nullable = false)
	public Integer getIdrisposta() {
		return this.idrisposta;
	}

	public void setIdrisposta(Integer idrisposta) {
		this.idrisposta = idrisposta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddomanda", nullable = false)
	public Domanda getDomanda() {
		return this.domanda;
	}

	public void setDomanda(Domanda domanda) {
		this.domanda = domanda;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idutente")
	public Utente getUtente() {
		return this.utente;
	}

	public void setUtente(Utente utente) {
		this.utente = utente;
	}

	@Column(name = "descrizione", nullable = false, length = 65535)
	public String getDescrizione() {
		return this.descrizione;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datacreazione", nullable = false, length = 19)
	public Date getDatacreazione() {
		return this.datacreazione;
	}

	public void setDatacreazione(Date datacreazione) {
		this.datacreazione = datacreazione;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "risposta")
	public Set<Commentorisposta> getCommentorispostas() {
		return this.commentorispostas;
	}

	public void setCommentorispostas(Set<Commentorisposta> commentorispostas) {
		this.commentorispostas = commentorispostas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "risposta")
	public Set<Domanda> getDomandas() {
		return this.domandas;
	}

	public void setDomandas(Set<Domanda> domandas) {
		this.domandas = domandas;
	}

}
